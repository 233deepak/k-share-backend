AWSTemplateFormatVersion: 2010-09-09
Transform:
- AWS::Serverless-2016-10-31
- AWS::CodeStar

Parameters:
  ProjectId:
    Type: String
    Description: AWS CodeStar projectID used to associate new resources to team members

# Enable blue/green deployments using this Globals section. For instructions, see the AWS CodeStar User Guide:
# https://docs.aws.amazon.com/codestar/latest/userguide/how-to-modify-serverless-project.html?icmpid=docs_acs_rm_tr
#
# Globals:
#   Function:
#     AutoPublishAlias: live
#     DeploymentPreference:
#       Enabled: true
#       Type: Canary10Percent5Minutes

Resources:

  CreateTopic:
      Type : AWS::Serverless::Function
      Properties:
       Handler: com.amazonaws.kshare.lambda.TopicLambda
       Runtime: java8
       Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
       Events:
          CreateEvent:
           Type: Api
           Properties:
             Path: /topic
             Method: put
      
             
  GetTopic:
      Type : AWS::Serverless::Function
      Properties:
       Handler: com.amazonaws.kshare.lambda.TopicLambda
       Runtime: java8
       Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
       Events:
          getEvent:
           Type: Api
           Properties:
             Path: /topic
             Method: post 
              
  UpdateTopic:
      Type : AWS::Serverless::Function
      Properties:
       Handler: com.amazonaws.kshare.lambda.TopicLambda
       Runtime: java8
       Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
       Events:
          getEvent:
           Type: Api
           Properties:
             Path: /topic/{topic_id}
             Method: put            
             
  AddCommentToTopic:
      Type : AWS::Serverless::Function
      Properties:
       Handler: com.amazonaws.kshare.lambda.TopicLambda
       Runtime: java8
       Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
       Events:
          CreateEvent:
           Type: Api
           Properties:
             Path: /topic/{topic_id}/comment
             Method: put  
             
  GetAllCommentsForTopic:
      Type : AWS::Serverless::Function
      Properties:
       Handler: com.amazonaws.kshare.lambda.TopicLambda
       Runtime: java8
       Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
       Events:
          getEvent:
           Type: Api
           Properties:
             Path: /topic/{topic_id}/comment
             Method: get
             
  InitializeCommenTable :
      Type : AWS::Serverless::Function
      Properties:
       Handler: com.amazonaws.kshare.lambda.TopicLambda
       Runtime: java8
       Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
       Events:
          getEvent:
           Type: Api
           Properties:
             Path: /topic/comment
             Method: patch 
             
  InitializeTopicTable :
      Type : AWS::Serverless::Function
      Properties:
       Handler: com.amazonaws.kshare.lambda.TopicLambda
       Runtime: java8
       Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
       Events:
          getEvent:
           Type: Api
           Properties:
             Path: /topic
             Method: patch                         
               
  CreateDocument:          
      Type : AWS::Serverless::Function
      Properties:
       Handler: com.amazonaws.kshare.lambda.DocLambda
       Runtime: java8
       Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
       Events:
          getEvent:
           Type: Api
           Properties:
             Path: /doc
             Method: put
  GetDocument :
      Type : AWS::Serverless::Function
      Properties:
       Handler: com.amazonaws.kshare.lambda.DocLambda
       Runtime: java8
       Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
       Events:
          getEvent:
           Type: Api
           Properties:
             Path: /doc/{doc_id}
             Method: get
             
  InitializeDocumentTable :
      Type : AWS::Serverless::Function
      Properties:
       Handler: com.amazonaws.kshare.lambda.DocLambda
       Runtime: java8
       Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
       Events:
          getEvent:
           Type: Api
           Properties:
             Path: /doc
             Method: patch           
  
  CreateUser:          
      Type : AWS::Serverless::Function
      Properties:
       Handler: com.amazonaws.kshare.lambda.UserLambda
       Runtime: java8
       Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
       Events:
          getEvent:
           Type: Api
           Properties:
             Path: /user
             Method: put
  
  GetUserByEmailId :
      Type : AWS::Serverless::Function
      Properties:
       Handler: com.amazonaws.kshare.lambda.UserLambda
       Runtime: java8
       Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
       Events:
          getEvent:
           Type: Api
           Properties:
             Path: /user/{email_Id}/{social_Site}
             Method: get           
 
  InitializeUsertable :
      Type : AWS::Serverless::Function
      Properties:
       Handler: com.amazonaws.kshare.lambda.UserLambda
       Runtime: java8
       Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
       Events:
          getEvent:
           Type: Api
           Properties:
             Path: /user
             Method: patch             
